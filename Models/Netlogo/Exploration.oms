import java.text.SimpleDateFormat
import java.util.Date

import Model._

//gravityDecay,distribSd,overlapThreshold,transportationCost
val exploration = ExplorationTask(
  /*(((gravityDecay in (10.0 to 90.0 by 10.0)) x
  (distribSd in (0.05 to 0.55 by 0.1)) x
  (overlapThreshold in (0.0 to 0.5 by 0.1)) x
  (transportationCost in (0.0 to 4.0 by 0.5))
  ) withIndex id )*/
  (LHS(
    1,
    gravityDecay in Range(0.0,100.0),
    distribSd in Range(0.01,0.5),
    overlapThreshold in Range(0.0,0.5),
    transportationCost in Range(0.05,10.0)
  ) withIndex id)
  x (replication in UniformDistribution[Int]() take 50)
)
val purpose = "test"
//val purpose = "grid_uniform"

val eval = exploration -< model

val indics_hook = AppendToCSVFileHook(workDirectory / "res" / "exploration" / ((new SimpleDateFormat("yyyy_MM_dd_HH_mm_ss")).format(new Date()))+"_"+purpose+".csv")

val local = LocalEnvironment(50)
//val grid = DIRACEnvironment("vo.complex-systems.eu")

//exploration -< (model on grid by 300 hook indics_hook)
exploration -< (model on local hook indics_hook)
